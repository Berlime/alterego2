<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on Alter Ego 2</title>
    <link>/tags/dev/</link>
    <description>Recent content in Dev on Alter Ego 2</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Woo Commerce Icons</title>
      <link>/posts/woo-commerce-icons/</link>
      <pubDate>Mon, 06 Jan 2025 00:00:00 +0000</pubDate>
      <guid>/posts/woo-commerce-icons/</guid>
      <description>&lt;h2 id=&#34;use-case&#34;&gt;Use case&lt;/h2&gt;&#xA;&lt;p&gt;Client requested a custom order status, for context, there are a lot of ways to do this.&#xA;I recommend getting plug-ins from Yith which obviously adds up to their commitment.&lt;/p&gt;&#xA;&lt;p&gt;I wasn&amp;rsquo;t sure if they are okay with the add ons, so I just went ahead and create a low fidelity order status and send customer note when the order the status changes.&lt;/p&gt;&#xA;&lt;p&gt;I will share the code some other time but for now.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Reference When Publishing a Blog</title>
      <link>/posts/my-reference-when-publishing-a-blog/</link>
      <pubDate>Fri, 27 Dec 2024 00:00:00 +0000</pubDate>
      <guid>/posts/my-reference-when-publishing-a-blog/</guid>
      <description>&lt;h2 id=&#34;create-new-post-via-terminal&#34;&gt;Create New Post via Terminal&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make sure you are at &lt;code&gt;/your_site&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new content/posts/my-first-post.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or simply edit your current blogpost at &lt;code&gt;content/post/your-post.md&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Save the file and go to terminal, cd to &lt;code&gt;/your_site&lt;/code&gt; and run the command &lt;code&gt;hugo&lt;/code&gt; to regenerate public files&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Now let git check the changed file using this in &lt;code&gt;/your_site&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git status&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;it should display something like this&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Changes to be committed:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git rm --cached &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to unstage&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        new file:   .gitmodules&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        new file:   themes/gokarna&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Untracked files:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to include in what will be committed&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .hugo_build.lock&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        archetypes/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        content/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hugo.toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pub&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;At &lt;code&gt;/public&lt;/code&gt;, add the files, commit (make sure at the selected branch) then push&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rounded Corners</title>
      <link>/posts/rounded-corners/</link>
      <pubDate>Wed, 18 Dec 2024 00:00:00 +0000</pubDate>
      <guid>/posts/rounded-corners/</guid>
      <description>&lt;h2 id=&#34;wcpa-rounded-corners-for-custom-wood-orders&#34;&gt;WCPA Rounded corners for custom wood orders&lt;/h2&gt;&#xA;&lt;p&gt;First, we need to determine the minmax of the cuts for each corner. This cuts must be relative to the width and the length.&#xA;The goal is to allow users to customize order not just by adding rounded corners on the required sides, but also, allows granular measurement for irregular shapes, and routing.&lt;/p&gt;&#xA;&lt;h2 id=&#34;we-need-to-start-from-the-4-sided-measurements&#34;&gt;We need to start from the 4 sided measurements&lt;/h2&gt;&#xA;&lt;p&gt;First, we need to identify the mid-point variable where,&lt;/p&gt;</description>
    </item>
    <item>
      <title>Free Up Space Ubuntu</title>
      <link>/posts/free-up-space-ubuntu/</link>
      <pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate>
      <guid>/posts/free-up-space-ubuntu/</guid>
      <description>&lt;h2 id=&#34;1-clear-the-apt-cache&#34;&gt;1. Clear the APT Cache&lt;/h2&gt;&#xA;&lt;p&gt;Find out how large is the apt package cache:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;du -sh /var/cache/apt/archives&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Clear the cache:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get clean&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;2-remove-old-kernels&#34;&gt;2. Remove Old Kernels&lt;/h2&gt;&#xA;&lt;p&gt;Not sure how it works, really but here we go,&lt;/p&gt;&#xA;&lt;p&gt;Proceed with caution:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get autoremove --purge&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;3-last-stay-up-to-date&#34;&gt;3. Last, stay up to date&lt;/h2&gt;&#xA;&lt;p&gt;Do this regularly&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; upgrade&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;You can read the full article where I found the above commands &lt;a href=&#34;https://www.omgubuntu.co.uk/2016/08/5-ways-free-up-space-on-ubuntu&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>LTeX- Spell Checker</title>
      <link>/posts/ltex-spell-checker/</link>
      <pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate>
      <guid>/posts/ltex-spell-checker/</guid>
      <description>&lt;h3 id=&#34;ltex-spell-checker-for-visual-studio-code&#34;&gt;LTeX Spell Checker for Visual Studio Code&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;strong&gt;LTeX Spell Checker&lt;/strong&gt; is a powerful extension for Visual Studio Code that integrates with &lt;strong&gt;LanguageTool&lt;/strong&gt; to provide advanced grammar, style, and spell checking. It&amp;rsquo;s particularly useful for writing in markup languages and ensures that your documents are not only syntactically correct but also grammatically polished.&lt;/p&gt;&#xA;&lt;h4 id=&#34;key-features&#34;&gt;Key Features&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Offline Checking&lt;/strong&gt;: LTeX operates offline, meaning it doesn&amp;rsquo;t upload your documents to the internet, which is crucial for maintaining privacy and security.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Multilingual Support&lt;/strong&gt;: Supports a wide range of languages including but not limited to English, French, German, Dutch, Chinese, and Russian. This is especially beneficial if you write in multiple languages or need to ensure correct grammar in different linguistic contexts.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Highlighting Issues&lt;/strong&gt;: It highlights&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;Post Changelogs&lt;/em&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;27th Dec 2024 - Updated Hugo Version&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;16th Dec 2024 - Publish Date&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>GitHub</title>
      <link>/posts/github/</link>
      <pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate>
      <guid>/posts/github/</guid>
      <description>&lt;h2 id=&#34;my-first-encounter-with-github&#34;&gt;My first encounter with GitHub&lt;/h2&gt;&#xA;&lt;p&gt;All I knew about GitHub was some sort of place where you dump codes and make it available to the public. But still, I have no idea what is the purpose of it, at all. Until Tasnim, enlightened me what it really was.&#xA;See, of course I&amp;rsquo;ve watched a few YouTube videos of what GitHub is, I kind of get the idea but do not know how it works, what is it for, etcetera.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SEO Partnership</title>
      <link>/posts/seo-partnership/</link>
      <pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>
      <guid>/posts/seo-partnership/</guid>
      <description>&lt;h2 id=&#34;new-seo-service&#34;&gt;New SEO Service&lt;/h2&gt;&#xA;&lt;p&gt;Today marks the journey of introducing a new suite of services to my agency. Before we dive in, let me tell you a story about why offering SEO services may not be as easy as spinning up a new product line. You see, running an agency has its own challenges, especially with limited resources in terms of manpower and financial capabilities. My agency&amp;rsquo;s core product offers a web development service. This service alone involves thousands of technicalities that require a certain level of skill set.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I use Hugo for this blog</title>
      <link>/posts/hugo/</link>
      <pubDate>Tue, 30 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/posts/hugo/</guid>
      <description>&lt;h2 id=&#34;hugo-is-a-static-site-generator&#34;&gt;Hugo is a static site generator&lt;/h2&gt;&#xA;&lt;p&gt;Introduced by my good friend of mind back in Secondary school. I straight away fell in love in static sites. I have been dabbling into WordPress thinking that it is the &amp;lsquo;Holy Grail&amp;rsquo; of web development. &lt;em&gt;buzzz!!&lt;/em&gt; Nope. I was totally wrong.&lt;/p&gt;&#xA;&lt;p&gt;Tasnim, actually first started using &lt;a href=&#34;https://gethugo.io&#34;&gt;Hugo&lt;/a&gt; for his own personal blog. He thought me a lot about how VS Code works, this is the point where I discovered the term IDE, he is darn good at explaining complex things into simple terms. Which struck me like a lightning.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
